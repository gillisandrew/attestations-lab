name: Scan image with Amazon Inspector
on:
  workflow_dispatch:
    inputs:
      image:
        required: true

jobs:
  scan:
    runs-on: ubuntu-latest
    environment:
      name: nonprod
    permissions:
      id-token: write
      attestations: write
      packages: write
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Inspector Scan
        id: inspector
        uses: aws-actions/vulnerability-scan-github-action-for-amazon-inspector@v1
        with:
          artifact_type: container
          artifact_path: ${{ github.event.inputs.image }}
  
          display_vulnerability_findings: "enabled"
  
          # Set vulnerability thresholds; if the number of vulnerabilities is
          # equal to or greater than any of the specified thresholds, this
          # action will set the 'vulnerability_threshold_exceeded'
          # output flag to 1.
          critical_threshold: 1
          high_threshold: 1
          medium_threshold: 1
          low_threshold: 1
          other_threshold: 1
      - name: Display CycloneDX SBOM (JSON)
        run: cat ${{ steps.inspector.outputs.artifact_sbom }}
  
      - name: Display Inspector vulnerability scan results (JSON)
        run: cat ${{ steps.inspector.outputs.inspector_scan_results }}
  
      - name: Display Inspector vulnerability scan results (CSV)
        run: cat ${{ steps.inspector.outputs.inspector_scan_results_csv }}
  
      - name: Display Inspector vulnerability scan results (Markdown)
        run: cat ${{ steps.inspector.outputs.inspector_scan_results_markdown }}
   
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      # - name: Attest Scan
      #   uses: actions/attest-sbom@v1
      #   with:
      #     subject-path: '<PATH TO ARTIFACT>'
      #     sbom-path: ${{ steps.inspector.outputs.artifact_sbom }}
      #     push-to-registry: true